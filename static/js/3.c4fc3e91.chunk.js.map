{"version":3,"sources":["components/Main/Messages/Messages.module.scss","components/Main/Messages/Message/Message.module.scss","components/Main/Messages/Message/Message.jsx","components/Main/Messages/Messages.jsx","components/Main/Messages/MessagesContainer.jsx"],"names":["module","exports","Message","props","src","userIcon","alt","className","styles","user_avatar","userName","messageText","maxLegth100","maxLenghtCreator","AddMessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","name","component","Textarea","validate","required","compose","connect","state","messages","messagesReducer","dispatch","addMessage","newMessage","addMessageAC","withAuthRedirect","messageElements","map","message","id","values"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,YAAc,gC,oBCAhCD,EAAOC,QAAU,CAAC,YAAc,+B,8GCGnBC,EAAU,SAACC,GACpB,OACI,gCACI,qBAAKC,IAAKC,IAAUC,IAAI,SAASC,UAAWC,IAAOC,cACnD,+BAAON,EAAMO,WACb,8BAAMP,EAAMQ,kB,kCCFpBC,EAAcC,YAAiB,KAe/BC,EAAsBC,YAAU,CAACC,KAAM,kBAAjBD,EAdL,SAACZ,GAClB,IAAOc,EAAgBd,EAAhBc,aACP,OACI,uBAAMC,SAAUD,EAAhB,UACI,8BACI,cAACE,EAAA,EAAD,CAAOC,YAAa,oBACbC,KAAM,aACNC,UAAWC,IACXC,SAAU,CAACC,IAAUb,OAEhC,wD,yBCAGc,sBAAQC,aAZD,SAACC,GACnB,MAAO,CACHC,SAAUD,EAAME,gBAAgBD,aAIf,SAACE,GACtB,MAAO,CACHC,WAAY,SAACC,GAAD,OAAgBF,EAASG,YAAaD,SAIWE,IAAtDT,EDMS,SAACvB,GACrB,IAAIiC,EAAkBjC,EAAM0B,SAASQ,KAAK,SAAAC,GAAY,OAAO,cAAC,EAAD,CAASC,GAAID,EAAQC,GAClB7B,SAAU4B,EAAQ5B,SAClBC,YAAa2B,EAAQ3B,aAChB2B,EAAQC,OAM7E,OACI,sBAAKhC,UAAWC,IAAOqB,SAAvB,UACI,cAACf,EAAD,CAAqBI,SALZ,SAACsB,GACdrC,EAAM6B,WAAWQ,EAAOP,eAKpB,8BACKG","file":"static/js/3.c4fc3e91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_avatar\":\"Messages_user_avatar__eVUGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_avatar\":\"Message_user_avatar__20mFl\"};","import React from \"react\";\r\nimport styles from \"./Message.module.scss\";\r\nimport userIcon from \"../../../../common/img/users.jpg\";\r\n\r\nexport const Message = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={userIcon} alt=\"avatar\" className={styles.user_avatar}/>\r\n            <span>{props.userName}</span>\r\n            <div>{props.messageText}</div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./Messages.module.scss\";\r\nimport { Message } from \"./Message/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormControls/FormControls\";\r\nimport { maxLenghtCreator, required } from \"../../../common/utils/validators/validators\";\r\n\r\nlet maxLegth100 = maxLenghtCreator(100)\r\nlet addMessageForm = (props) => {\r\n    const {handleSubmit} = props;\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Ente your message\"} \r\n                       name={\"newMessage\"} \r\n                       component={Textarea}\r\n                       validate={[required, maxLegth100]}/>\r\n            </div>\r\n            <button>Send Message</button>\r\n        </form>\r\n    )\r\n}\r\nlet AddMessageReduxForm = reduxForm({form: \"addMessageForm\"})(addMessageForm);\r\n\r\nexport const Messages = (props) => {\r\n    let messageElements = props.messages.map( message => {return(<Message id={message.id} \r\n                                                                    userName={message.userName} \r\n                                                                    messageText={message.messageText}\r\n                                                                    key={message.id} />\r\n    )});\r\n\r\n    let addMessage = (values) => {\r\n        props.addMessage(values.newMessage);\r\n    }\r\n    return (\r\n        <div className={styles.messages}>\r\n            <AddMessageReduxForm onSubmit={addMessage}/>\r\n            <div>\r\n                {messageElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { connect } from \"react-redux\";\r\nimport { Messages } from \"./Messages\";\r\nimport { addMessageAC} from \"../../../redux/messagesReducer\";\r\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messagesReducer.messages,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessage) => dispatch(addMessageAC(newMessage)),\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Messages)"],"sourceRoot":""}